{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"_2.^beQjx|FGt38A,8(E\">myVariable</variable><variable id=\"%Y((81d*z_I$2Obe.V#b\">count1</variable><variable type=\"boolean\" id=\"Pg)Bu1UU*q,`2~j)=E2Y\">countLog1</variable></variables><block type=\"iq_other_comment\" id=\";Ievh7e(d4l*=GvUnP=q\" x=\"390\" y=\"-230\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"VADqYr;UX-If:ULjKovb\"><field name=\"comment\">Ukoly:</field></shadow></value><next><block type=\"iq_other_comment\" id=\"`UL82H9[m:Hu#f+COy}A\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"U*~P8OL^tmXi]?eYJh`U\"><field name=\"comment\">Hodnoty, které vrací senzory vypište v sériovém monitoru a na displeji Brainu</field></shadow></value><next><block type=\"iq_other_comment\" id=\"1Ce+7y1Oj(Bav%{*_$Sr\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"1m+]Y1It=3AlSf=4@j){\"><field name=\"comment\">Vytvořte vlasní funkci a dejte do ní kód z předešlého úkolu. Funkci zavolejte v hlavním programu.</field></shadow></value><next><block type=\"iq_other_comment\" id=\"NxD#c;0-]u*P4.{i]S2v\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"yOralI(ya+cJ+;?B8jl~\"><field name=\"comment\">Napište program, který při každém stisknutí tlačítka/touch senzoru zinvertuje pomocnou proměnnou. A zobrazte stav proměnné pomocí LED.</field></shadow></value></block></next></block></next></block></next></block><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"-10\"><next><block type=\"iq_sensing_optical_set_mode\" id=\"Mt)L:4a6Fi}G4T:b[|g9\"><field name=\"OPTICAL\">Optical4</field><field name=\"MODE\">color</field><next><block type=\"iq_sensing_optical_set_light_power\" id=\"@_%MkrB@O,*$_8*:[!J=\"><field name=\"OPTICAL\">Optical4</field><value name=\"POWER\"><shadow type=\"math_number\" id=\"lKfpZ]8.g|j{!kiEGuJG\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"iq_control_forever\" id=\"4yLM#)T#iV;Yt!I!(^Ac\"><statement name=\"SUBSTACK\"><block type=\"iq_control_if_then_else\" id=\"%7m]n+4^b-a3M_+VEFm?\"><value name=\"CONDITION\"><block type=\"iq_variables_boolean_variable\" id=\"ibDrOs.ei{,C~i9~$0le\"><field name=\"VARIABLE\" id=\"Pg)Bu1UU*q,`2~j)=E2Y\" variabletype=\"boolean\">countLog1</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_looks_set_touchled_color\" id=\"kCYdyzQ:hCuqr65B}l{5\"><field name=\"TOUCHLED\">TouchLED3</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"tp04oJY7FPQ|*@ak##$T\"><field name=\"COLOR\">red</field></shadow></value></block></statement><statement name=\"SUBSTACK2\"><block type=\"iq_looks_set_touchled_color\" id=\"QH!Rdqw0y*YE5;uZ,+@I\"><field name=\"TOUCHLED\">TouchLED3</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"~w!Trp?]}mhESZm=TX?T\"><field name=\"COLOR\">blue</field></shadow></value></block></statement><next><block type=\"procedures_call\" id=\"p1CIN9El5OCcW^r:?,mc\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"vypisSenzoruDispSerial\" proceduredefid=\"{98W85YDxSpq!FhP!d{W\" argumentids=\"[]\" warp=\"false\"></mutation><next><block type=\"iq_control_wait\" id=\".NhPtr2ScqGy96Wa}?ks\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"I;A#L9+(h~/KpQYz=Ql4\"><field name=\"NUM\">1</field></shadow></value></block></next></block></next></block></statement></block></next></block></next></block></next></block><block type=\"iq_events_when_touchled\" id=\"9;#^ORWN;DB,~;aFZnj`\" x=\"510\" y=\"30\"><field name=\"TOUCHLED\">TouchLED3</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_variables_set_boolean_variable\" id=\"Jaq#FFcr/.7|X5Fj;bNM\"><field name=\"VARIABLE\" id=\"Pg)Bu1UU*q,`2~j)=E2Y\" variabletype=\"boolean\">countLog1</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"}]Y:1i;T;9n-G(.H,ya1\"><field name=\"VALUE\">true</field></shadow><block type=\"iq_operator_not\" id=\"bjv/4zKs0YA[wcn2OwjN\"><value name=\"OPERAND\"><block type=\"iq_variables_boolean_variable\" id=\"tgl)RV18n5kqaL%;+{(g\"><field name=\"VARIABLE\" id=\"Pg)Bu1UU*q,`2~j)=E2Y\" variabletype=\"boolean\">countLog1</field></block></value></block></value></block></next></block><block type=\"procedures_definition\" id=\"2wIf{q964%ZdH:v9|/GN\" x=\"970\" y=\"50\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"{98W85YDxSpq!FhP!d{W\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"vypisSenzoruDispSerial\" proceduredefid=\"{98W85YDxSpq!FhP!d{W\" argumentids=\"[]\" argumentnames=\"[]\" argumentdefaults=\"[]\" argumenttypes=\"[]\" warp=\"false\"></mutation></shadow></statement><next><block type=\"iq_looks_print_new\" id=\"]Nsg~WC4:0RA7q1Q95{o\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"^nMlQ_+7HX!C{2X4cxA6\"><field name=\"TEXT\">Jas: </field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"Dr:CFM|aU3G/J2l_W`::\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"-|V{$FbcTJtI8An0i(o@\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"iq_sensing_optical_brightness\" id=\"`T-JWE4fU+5**T[{2:}8\"><field name=\"OPTICAL\">Optical4</field></block></value><next><block type=\"iq_looks_print_new\" id=\"3?Nvld#-8!fs9`KgwEa{\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"O/T$NaTKX)PmRb3kw?45\"><field name=\"TEXT\">Odstin: </field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"WCe^1(apHN}CrbOlJgaR\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"o62.uqPicTJR?USww_Bo\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"iq_sensing_optical_hue\" id=\"FW!$4uO?U:;:{883LRWg\"><field name=\"OPTICAL\">Optical4</field></block></value><next><block type=\"iq_looks_print_new\" id=\".jd%(Vso#?LJcokG#8j.\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"Dtfo,p-a3TMg.lc?qlV[\"><field name=\"TEXT\">Touch - stav: </field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"ytaQqJX++O,~:j2`i(Pl\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"]enA!se8Tynl5GT9{60s\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"iq_variables_boolean_variable\" id=\"j)Jc*vMxb-7?,Iu[fhM4\"><field name=\"VARIABLE\" id=\"Pg)Bu1UU*q,`2~j)=E2Y\" variabletype=\"boolean\">countLog1</field></block></value><next><block type=\"iq_looks_print_new\" id=\".WleQ$Lg!`?yZS~:YN,(\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"DP-]pd/l6+@gCRDCv4Q~\"><field name=\"TEXT\">Vzdalenost: </field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"q]g#24;V_AXj/Qtcheu/\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"pTf,7ye8$}dU0{HqZ.j#\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"iq_sensing_distance_object_distance\" id=\"M5?ETyVK!^U)VI|HOpZu\"><field name=\"DISTANCE\">Distance2</field><field name=\"UNITS\">mm</field></block></value><next><block type=\"iq_looks_set_cursor_new\" id=\"Y[s`q9w03L!R.;!!d5%-\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"^Jqk|$H?{9Mx:t][essv\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"OPWjWS38r)hbB/pmK9Bs\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"wYC_2(,lKCrs^I~sPqGT\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"N#|Ve,@v.D+Y36HY$VL+\"><field name=\"TEXT\">Jas: </field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"5lquS$xcVIQe#iI!lQ!)\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"yJ?wi)I5#SE|8Jne;|0v\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"iq_sensing_optical_brightness\" id=\"HTmX,,%aB|HbS-TDH#Cf\"><field name=\"OPTICAL\">Optical4</field></block></value><next><block type=\"iq_looks_print_new\" id=\"j]V%fmiOv|rN9Yv*yH44\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"=%2fT-*YWX$dPHL6LkiO\"><field name=\"TEXT\">Odstin: </field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"m6O0[D0YZ:Ayi3@LNh,0\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"d0j54DA/B_/B@%%Bi^9G\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"iq_sensing_optical_hue\" id=\"Y~))4b.r:A(LF5BV}dxA\"><field name=\"OPTICAL\">Optical4</field></block></value><next><block type=\"iq_looks_print_new\" id=\"G+26$YqCKKX$Pd!Y0K[4\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"`{y4^4Z`zi3PgxZ4En`m\"><field name=\"TEXT\">Touch: </field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"DZl[Ao*)Ir1BL$}]dt?X\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"iq_variables_boolean_variable\" id=\"62_]0*Z@h}T{gY5E;/XF\"><field name=\"VARIABLE\" id=\"Pg)Bu1UU*q,`2~j)=E2Y\" variabletype=\"boolean\">countLog1</field></block></value><next><block type=\"iq_looks_print_new\" id=\"NJMk9/MYuJz{j_|x1ta9\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"~Nmjx9Ix:Pp=oTTfmbf)\"><field name=\"TEXT\">Vzdalenost: </field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"d10C9,k4PXYhJ8=Uq8s:\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"iq_sensing_distance_object_distance\" id=\"0xgnF27]|hxR.1MkbPfw\"><field name=\"DISTANCE\">Distance2</field><field name=\"UNITS\">mm</field></block></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[4],"name":"Optical4","customName":false,"deviceType":"Optical","deviceClass":"optical","setting":{},"triportSourcePort":22},{"port":[3],"name":"TouchLED3","customName":false,"deviceType":"TouchLED","deviceClass":"touchled","setting":{}},{"port":[2],"name":"Distance2","customName":false,"deviceType":"Distance","deviceClass":"distance","setting":{}}],"slot":2,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"3.0.4","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\noptical Optical4 = optical(PORT4);\ntouchled TouchLED3 = touchled(PORT3);\ndistance Distance2 = distance(PORT2);\n\n\n\n// Generated code.\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\n// User defined function\nvoid myblockfunction_vypisSenzoruDispSerial();\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat myVariable, count1;\n\nbool countLog1;\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToConsole_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Console_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// User defined function\nvoid myblockfunction_vypisSenzoruDispSerial() {\n  printf(\"Jas: \");\n  printf(printToConsole_numberFormat(), static_cast<float>(Optical4.brightness()));\n  printf(\"\\n\");\n  printf(\"Odstin: \");\n  printf(printToConsole_numberFormat(), static_cast<float>(Optical4.hue()));\n  printf(\"\\n\");\n  printf(\"Touch - stav: \");\n  printf(\"%s\", countLog1 ? \"TRUE\" : \"FALSE\");\n  printf(\"\\n\");\n  printf(\"Vzdalenost: \");\n  printf(printToConsole_numberFormat(), static_cast<float>(Distance2.objectDistance(mm)));\n  printf(\"\\n\");\n  Brain.Screen.setCursor(1, 1);\n  Brain.Screen.print(\"Jas: \");\n  Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Optical4.brightness()));\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Odstin: \");\n  Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Optical4.hue()));\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Touch: \");\n  Brain.Screen.print(\"%s\", countLog1 ? \"TRUE\" : \"FALSE\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Vzdalenost: \");\n  Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Distance2.objectDistance(mm)));\n  Brain.Screen.newLine();\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  Optical4.gestureDisable();\n  Optical4.setLightPower(50.0, percent);\n  while (true) {\n    if (countLog1) {\n      TouchLED3.setColor(red);\n    }\n    else {\n      TouchLED3.setColor(blue);\n    }\n    myblockfunction_vypisSenzoruDispSerial();\n    wait(1.0, seconds);\n  wait(20, msec);\n  }\n  return 0;\n}\n\n// \"when TouchLED3 pressed\" hat block\nvoid onevent_TouchLED3_pressed_0() {\n  countLog1 = !countLog1;\n}\n\n\nint main() {\n  // register event handlers\n  TouchLED3.pressed(onevent_TouchLED3_pressed_0);\n\n  wait(15, msec);\n  whenStarted1();\n}","target":"Physical"}